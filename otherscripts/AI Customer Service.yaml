openapi: "3.0.1"
info:
  title: "AI Customer Service API"
  description: "AI Customer Service application, built during the Cloud and Big Data\
    \ course at NYU."
  version: "1.0.0"
servers:
- url: "https://oupu78bqgj.execute-api.us-east-1.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "hw1"
paths:
  /chatbot:
    post:
      tags:
      - "NLU"
      summary: "The endpoint for the Natural Language Understanding API."
      description: "This API takes in one or more messages from the client and returns\n\
        one or more messages as a response. The API leverages the NLP\nbackend functionality,\
        \ paired with state and profile information\nand returns a context-aware reply.\n"
      operationId: "sendMessage"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BotRequest"
        required: true
      responses:
        "500":
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "200":
          description: "A Chatbot response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BotResponse"
        "403":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
components:
  schemas:
    BotRequest:
      type: "object"
      properties:
        messages:
          type: "array"
          items:
            $ref: "#/components/schemas/Message"
    Message:
      type: "object"
      properties:
        type:
          type: "string"
        unstructured:
          $ref: "#/components/schemas/UnstructuredMessage"
    UnstructuredMessage:
      type: "object"
      properties:
        id:
          type: "string"
        text:
          type: "string"
        timestamp:
          type: "string"
          format: "datetime"
    BotResponse:
      type: "object"
      properties:
        messages:
          type: "array"
          items:
            $ref: "#/components/schemas/Message"
    Error:
      type: "object"
      properties:
        code:
          type: "integer"
          format: "int32"
        message:
          type: "string"
